import discord
from discord.ext import commands
from discord import app_commands
from discord.ui import Select, Button, View
import json
from datetime import datetime

intents = discord.Intents.default()
intents.messages = True
intents.message_content = True
intents.members = True

bot = commands.Bot(command_prefix='!', intents=intents)

# Configuration
STAFF_ID = 1234567890  # REPLACE WITH YOUR STAFF ID
PRODUCTS = [
    {
        "emoji": "üì∫",
        "name": "Netflix",
        "desc": "Xem Netflix gi√° r·∫ª"
    },
    {
        "emoji": "üî∞"
        "name":"Adgruad"
        "desc": "Adgruad Vƒ©nh Vi·ªÖn"
    },
    {
        "emoji":"‚äû"
        "name":"Windows & Office"
        "desc": "K√≠ch ho·∫°t Windows b·∫£n quy·ªÅn"
    },
    {
        "emoji":""
        "name":"Spotify"
        "desc":"N√¢ng C·∫•p T√†i Kho·∫£n Spot√¨y"
    },

]

# Ticket counter 
try:
    with open('ticket_count.json', 'r') as f:
        ticket_count = json.load(f).get('count', 0)
except FileNotFoundError:
    ticket_count = 0

def save_ticket_count():
    with open('ticket_count.json', 'w') as f:
        json.dump({'count': ticket_count}, f)
#custom emoji class
class ProductSelect(Select):
    def __init__(self):
        options = []
        for product in PRODUCTS:
            emoji_str = product["emoji"]
            if emoji_str.startswith("<"):
                emoji = discord.PartialEmoji.from_str(emoji_str)
            else:
                emoji = emoji_str

            options.append(
                discord.SelectOption( 
                    emoji=emoji,
                    label=product["name"],
                    description=product["desc"][:100]
                )
            )
        
        super().__init__(
            placeholder="Ch·ªçn s·∫£n ph·∫©m...",
            options=options,
            custom_id="product_select"
        )

    async def callback(self, interaction: discord.Interaction):
        selected = next(p for p in PRODUCTS if p["name"] == self.values[0])

        if selected["name"] == "Netflix":
            # Custom embed
            embed = discord.Embed(
                title="Profile ùó°ùó≤ùòÅùó≥ùóπùó∂ùòÖ Ri√™ng T∆∞",
                color=12141023,
                timestamp=datetime.fromisoformat("2025-01-24T01:28:00.000Z")
            )
            embed.add_field(
                name="> Gi√° 1 Th√°ng",
                value="```ansi\n [2;45m[0m[2;35m 55.000 VNƒê [0m```",
                inline=False
            )
            embed.add_field(
                name="> Gi√° 3 Th√°ng",
                value="```ansi\n [2;45m[0m[2;35m160.000 VNƒê[0m```",
                inline=False
            )
            embed.add_field(
                name="Gia h·∫°n ch√≠nh ch·ªß:",
                value="```ansi\n [2;45m[0m[2;35mCh·ªâ Kh√°ch Quen...[0m```",
                inline=False
            )
            embed.set_image(url="https://images-ext-1.discordapp.net/external/teWc6o4fDdlzKGiiwJMdXv3Dd5VD8SeJLuv9zEKdFYo/https/64.media.tumblr.com/6d99b72021a1854e5cd31c8925cf3e1d/7cbc637e28491939-aa/s1280x1920/2e57304913ab234d3c99769fa253092e7392ca39.gifv?format=webp")

            if selected["name"] == "Adgruad":
        embed = discord.Embed(
            title="K√≠ch Ho·∫°t Adgruad Vƒ©nh Vi·ªÖn ",
            color=12141023,
            timestamp=datetime.fromisoformat("2025-01-24T01:28:00.000Z")
        )
        embed.add_field(
            name="> Gi√° 1 Thi·∫øt B·ªã",
            value="```ansi\n[2;45m[0m[2;35m80.000 VNƒê[0m```",
            inline=False
        )
        embed.add_field(
            name="> Gi√° 3 Thi·∫øt B·ªã",
            value="```ansi\n[2;45m[0m[2;35m220.000 VNƒê[0m```",
            inline=False
        )
        embed.add_field(
            name="> Gi√° 9 Thi·∫øt B·ªã ",
            value="```ansi\n[2;45m[0m[2;35m600.000 VNƒê[0m```",
            inline=False
        )
        embed.set_image(url="")

            if selected["name"] == "Windows & Office":
        embed = discord.Embed(
            title="K√≠ch ho·∫°t 1 l·∫ßn v√† vƒ©nh vi·ªÖn",
            color=12141023,
            timestamp=datetime.fromisoformat("2025-01-24T01:28:00.000Z")
        )
        embed.add_field(
            name="> Windows 10 (T·∫•t c·∫£ phi√™n b·∫£n )",
            value="```ansi\n[2;45m[0m[2;35m80.000 VNƒê[0m```",
            inline=False
        )
        embed.add_field(
            name="> Office 365 (Full app)",
            value="```ansi\n[2;45m[0m[2;35m175.000 VNƒê[0m```",
            inline=False
        embed.set_image(url="")

            if selected["name"] == "Spotify":
                embed = discord.Embed(
                    title="Gi√° Spotify",
                    color=12141023,
                    timestamp=datetime.fromisoformat("2025-01-24T01:28:00.000Z")
                    )
        embed.add_field(
            name="> ",
            values="",
            inline=False
            )
        embed.set_image(url=""),
        
        view = ConfirmView(selected)
        await interaction.response.send_message(
            embed=embed,
            view=view,
            ephemeral=True
        )

class ConfirmView(View):
    def __init__(self, product):
        super().__init__()
        self.product = product

    @discord.ui.button(label="Mua", style=discord.ButtonStyle.green)
    async def confirm(self, interaction: discord.Interaction, button: Button):
        global ticket_count
        ticket_count += 1
        save_ticket_count()
        
        try:
            thread = await interaction.channel.create_thread(
                name=f"ƒê∆°n h√†ng {ticket_count}",
                type=discord.ChannelType.private_thread
            )
            
            await thread.add_user(interaction.user)
            staff = interaction.guild.get_member(STAFF_ID)
            if staff:
                await thread.add_user(staff)
            
            await thread.send(
                f"{interaction.user.mention} b·∫°n mu·ªën mua g√≥i **{self.product['name']}** n√†o ·∫°?\n"
                f"{staff.mention if staff else ''}"
            )
            
            await interaction.response.send_message(
                f"Created thread: {thread.mention}",
                ephemeral=True
            )
            
        except Exception as e:
            await interaction.response.send_message(
                f"L·ªói khi t·∫°o ƒë∆°n h√†ng: {str(e)}",
                ephemeral=True
            )

    @discord.ui.button(label="B·ªè qua", style=discord.ButtonStyle.red)
    async def cancel(self, interaction: discord.Interaction, button: Button):
        await interaction.response.defer()
        await interaction.delete_original_response()

class BaoGiaView(View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(ProductSelect())

@bot.tree.command(name="baogia", description="T·∫°o b√°o gi√° v√† ƒë∆°n h√†ng")
async def baogia(interaction: discord.Interaction):
    embed = discord.Embed(
        title="üìã Danh s√°ch s·∫£n ph·∫©m",
        description="Vui l√≤ng ch·ªçn s·∫£n ph·∫©m b·∫°n quan t√¢m:",
        color=0x7289da
    )
    
    view = BaoGiaView()
    await interaction.response.send_message(embed=embed, view=view, ephemeral=False)

@bot.event
async def on_ready():
    print(f'Logged in as {bot.user}')
    try:
        synced = await bot.tree.sync()
        print(f"Synced {len(synced)} commands")
    except Exception as e:
        print(e)

bot.run("tokenbot")
